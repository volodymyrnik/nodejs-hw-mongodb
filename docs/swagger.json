{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contact book",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Contact book's app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://contacts-app-vvuh.onrender.com/"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations with contacts"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register a new user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "Alice Tompson"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email",
                    "example": "example@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "format": "password",
                    "example": 1234567
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a user"
                    },
                    "data": {
                      "$ref": "#/components/schemas/register"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 409
                  },
                  "message": {
                    "type": "string",
                    "example": "Email in use!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email",
                    "example": "example@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "format": "password",
                    "example": 1234567
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "accessToken"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully login user!"
                    },
                    "accessToken": {
                      "type": "string",
                      "description": "Token from login response",
                      "example": "DIOZoLk09iCOUY7F4turCTcitFhZmtETECK8j3rC"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "684df4a5c8cf9d247b1e1ff4"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully logout user! There is nothing to return"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user session",
        "operationId": "refreshUser",
        "description": "Refresh user session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "684df4a5c8cf9d247b1e1ff4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refresh session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "684df4a5c8cf9d247b1e1ff4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Session not found",
                        "Refresh token is invalid",
                        "Refresh token is expired"
                      ],
                      "example": "Session not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/sendResetEmail": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send reset email",
        "operationId": "sendResetEmail",
        "description": "Send to user email about reset password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "example": "example@example.com"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Send reset email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email has been successfully sent."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "description": "Failed reset email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to send the email, please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/resetPassword": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "operationId": "resetPassword",
        "description": "Create a new password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password",
                  "accessToken"
                ],
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "Contact's password",
                    "format": "password",
                    "example": 1234567
                  },
                  "accessToken": {
                    "type": "string",
                    "description": "Token from login response",
                    "example": "DIOZoLk09iCOUY7F4turCTcitFhZmtETECK8j3rC"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been successfully reset."
                    },
                    "data": {
                      "$ref": "#/components/schemas/resetPassword"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get one contact from all by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "681f461358a5748d893ff8fb"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Patch contact by id",
        "operationId": "patchContact",
        "description": "Update contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the contact to update",
              "example": "684df4c2c8cf9d247b1e1ff8"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of contact",
                    "example": "Alice Tompson"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Contact's phone number",
                    "example": "+380000000006"
                  },
                  "email": {
                    "type": "string",
                    "description": "Contact's email",
                    "format": "email",
                    "example": "example@example.com"
                  },
                  "contactType": {
                    "type": "string",
                    "description": "Type of contact",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "work"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "description": "Contact chosen as favourite",
                    "example": true,
                    "default": false
                  },
                  "photo": {
                    "type": "string",
                    "description": "Contact's photo link",
                    "format": "binary",
                    "default": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a contact!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact by id",
        "operationId": "deletehContact",
        "description": "Delete contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the contact to delete",
              "example": "684df4c2c8cf9d247b1e1ff8"
            }
          }
        ],
        "responses": {
          "204": {
            "status": {
              "type": "integer",
              "example": 204,
              "description": "Successfully deleted a contact! There is nothing to return"
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contacts",
        "operationId": "getContacts",
        "description": "Get all contacts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1,
              "description": "Page number"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10,
              "description": "Contacts per page"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "name",
              "description": "Sort by key"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc",
              "description": "Sort order"
            }
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "boolean",
              "description": "Filter by query",
              "enum": [
                "true",
                "false"
              ],
              "example": true,
              "default": false
            }
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "description": "Type of contact",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "work"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create new contact",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "email",
                  "contactType"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of contact",
                    "example": "Alice Tompson"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Contact's phone number",
                    "example": "+380000000006"
                  },
                  "email": {
                    "type": "string",
                    "description": "Contact's email",
                    "format": "email",
                    "example": "example@example.com"
                  },
                  "contactType": {
                    "type": "string",
                    "description": "Type of contact",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "work"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "description": "Contact chosen as favourite",
                    "example": true,
                    "default": false
                  },
                  "photo": {
                    "type": "string",
                    "description": "Contact's photo link",
                    "format": "binary",
                    "default": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "register": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alice Tompson"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "format": "password",
            "example": 1234567
          }
        }
      },
      "resetPassword": {
        "type": "object",
        "required": [
          "password",
          "accessToken"
        ],
        "properties": {
          "password": {
            "type": "string",
            "description": "Contact's password",
            "format": "password",
            "example": 1234567
          },
          "accessToken": {
            "type": "string",
            "description": "Token from login response",
            "example": "DIOZoLk09iCOUY7F4turCTcitFhZmtETECK8j3rC"
          }
        }
      },
      "contact": {
        "type": "object",
        "required": [
          "name",
          "phoneNumber",
          "contactType",
          "userId",
          "photo"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of contact",
            "example": "Alice Tompson"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Contact's phone number",
            "example": "+380000000006"
          },
          "contactType": {
            "type": "string",
            "description": "Type of contact",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "work"
          },
          "userId": {
            "type": "string",
            "description": "Contact's owner id",
            "example": "68449eab7e4b0dae34cbc9cd"
          },
          "email": {
            "type": "string",
            "description": "Contact's email",
            "format": "email",
            "example": "example@example.com"
          },
          "isFavourite": {
            "type": "boolean",
            "description": "Contact chosen as favourite",
            "example": true,
            "default": false
          },
          "photo": {
            "type": "string",
            "description": "Contact's photo link",
            "format": "url",
            "example": "https://res.cloudinary.com/dzklpnqow/image/upload/v1749402572/brwaqdpoblgwjsolxi2j.jpg",
            "default": null
          },
          "createdAt": {
            "type": "string",
            "description": "Contact created at",
            "format": "date-time",
            "example": "2025-06-08T14:09:24.395+00:00"
          },
          "updatedAt": {
            "type": "string",
            "description": "Contact updated at",
            "format": "date-time",
            "example": "2025-06-09T14:09:24.395+00:00"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token not provided"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Contact not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Contact/User not found"
                }
              }
            }
          }
        }
      }
    }
  }
}