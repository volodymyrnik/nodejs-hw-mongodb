import nodemailer from 'nodemailer';
import { getEnvVar } from './getEnvVar.js';

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è SMTP-—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É
const transport = nodemailer.createTransport({
  host: getEnvVar('SMTP_HOST'),               // smtp-relay.brevo.com
  port: Number(getEnvVar('SMTP_PORT')),       // 587
  secure: false,                              // Brevo –ø—Ä–∞—Ü—é—î –Ω–∞ STARTTLS, —Ç–æ–º—É false
  auth: {
    user: getEnvVar('SMTP_USER'),             // —Ç–≤—ñ–π email —É Brevo
    pass: getEnvVar('SMTP_PASSWORD'),         // –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π SMTP –∫–ª—é—á
  },
});

// –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
export const sendMail = async ({ to, subject, html }) => {
  try {
    const from = getEnvVar('SMTP_FROM'); // –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∏–π email –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞
    const mailOptions = {
      from,
      to,
      subject,
      html,
    };

    const result = await transport.sendMail(mailOptions);
    console.log('‚úÖ Email sent:', result.messageId);
    return result;
  } catch (error) {
    console.error('‚ùå Error sending email:', error.message);
    console.error('üìÑ Full error object:', error);
    throw new Error('Failed to send the email, please try again later.');
  }
};
